?read.txt
?setpath
?path
file.path("C:\Users\kaany\OneDrive\Desktop\Practicals\MT3")
.Platform$file.sep
dt <- read.delim(file.path("C:\Users\kaany\OneDrive\Desktop\Practicals\MT3", fsep="\")
file.path("C:\Users\kaany\OneDrive\Desktop\Practicals\MT3", fsep="\")
dt <- read.delim("C:/Users/kaany/OneDrive/Desktop/Practicals/MT3/cloud.seeding.txt")
dgt
dt
head(dt)
str(dt)
# 1.3
cor(dt)
# 1.3
cor(dt)[cor(dt)>0.5]
# 1.3
cor(dt)[cor(dt)>0.5,]
# 1.3
cor(dt)[,cor(dt)>0.5]
# 1.3
cor(dt)
cor(dt)["Y"]
cor(dt)$Y
colnames(cor(dt))
typeof(cor(dt))
cor(dt)
cor(dt)[,"Y"]
# 1.3
cor(dt)[,"Y"]
# P, E, SNe, and T seem to be related to our response variables
par(dt)
?par
# P, E, SNe, and T seem to be related to our response variables
plot(dt)
dt
dt["A"]
# 1.5
dt["A"] = as.factor(dt["A"])
dt["A"]
# 1.5
dt["A"] = as.factor(dt["A"])
# 1.1
dt <- read.delim("C:/Users/kaany/OneDrive/Desktop/Practicals/MT3/cloud.seeding.txt")
dt["A"]
as.factor(dt["A"])
?as.factor
dt["E"]
as.factor(dt["E"])
dt["E"] = as.factor(dt["E"])
dt
# 1.5
dt["A"] = as.factor(dt["A"])
dt["E"] = as.factor(dt["E"])
dt
dt["A"]
# 1.1
dt <- read.delim("C:/Users/kaany/OneDrive/Desktop/Practicals/MT3/cloud.seeding.txt")
# 1.5
df = as.data.frame(dt)
df
typeof(df)
dt["A"] = as.factor(dt["A"])
dt
df["A"] = as.factor(df["A"])
df
df["E"] = as.factor(df["E"])
df
str9df
str(df)
# 1.1
dt <- read.delim("C:/Users/kaany/OneDrive/Desktop/Practicals/MT3/cloud.seeding.txt")
# 1.5
df = as.data.frame(dt)
df$A = as.factor(df$A)
df
str(df)
df$E = as.factor(df$E)
df
plot(df)
plot(data$x, data$y,                      # Plotting in Base R
col = df$A,
pch = 16)
plot(df$y, df$A,                      # Plotting in Base R
col = df$A,
pch = 16)
plot(df$Y, df$A,                      # Plotting in Base R
col = df$A,
pch = 16)
?cut
levels(df$A)
?plot
?cor
?par
cor(df$A, df$Y)
cor(df$Y,df$A)
df$A
df$A == 0
df[df$A==0]
df[A==0]
cor(df[]$Y,df["A"==0])
cor(df[]$Y,df[,A==0])
df[,A==0]
df[,"A"==0]
df["A"==0,]
df[A==0,]
df
df[df$A==T]
df$A==T
df[df$A==T,]
# 1.5
df = as.data.table(dt)
df$A = as.factor(df$A)
df$E = as.factor(df$E)
df[A==0,]
colnames(df)
library(data.table)
# 1.5
library(data.table)
df = as.data.table(dt)
df$A = as.factor(df$A)
df$E = as.factor(df$E)
df
df[A==1,]
cor(df[A==1]$Y,df[A==0,])
cor(df[A==1]$Y,df[A==0,Y])
cor(df[A==1]$Y,df[A==0,Y])
plot(df[A==1]$Y,df[A==0,Y])
?par
par(mfrow=c(2,2))
plot(df[A==1]$Y,df[A==0,Y])
plot(df[A==1]$Y,df[A==0,Y])
plot(df[A==1]$Y,df[A==0,Y])
plot(df[A==1]$Y,df[A==0,Y])
unique(df[,A])
unique(df[,E])
par(mfrow=c(2,2))
plot(df[A==1]$Y,df[A==1,Y])
plot(df[A==0]$Y,df[A==0,Y])
plot(df[E==1]$Y,df[E==1,Y])
plot(df[E==2]$Y,df[E==2,Y])
plot(df[A==1,]$Y,df[A==1,Y])
plot(df[A==1 & E == 0,]$Y,df[A==1,Y])
plot(df[A==1 & E == 0,]$Y,df[A==1 & E == 0,Y])
df[A==1 & E == 0,Y]
df[A==1 & E == 1,Y]
plot(df[A==1 & E == 1,]$Y,df[A==1 & E == 1,Y])
df[A==1]
plot(df[A==1,Y])
par(mfrow=c(2,2))
plot(df[A==1,Y])
plot(df[A==0,Y])
plot(df[E==1,Y])
plot(df[E==2,Y])
plot(df[A==1 & E == 1,Y])
plot(df[A==1 & E == 2,Y])
par(mfrow=c(4,2))
plot(df[A==1,Y])
plot(df[A==0,Y])
plot(df[E==1,Y])
plot(df[E==2,Y])
plot(df[A==1 & E == 1,Y])
plot(df[A==1 & E == 2,Y])
plot(df[A==0 & E == 1,Y])
plot(df[A==0 & E == 2,Y])
par(mfrow=c(2,4))
plot(df[A==1,Y])
plot(df[A==0,Y])
plot(df[E==1,Y])
plot(df[E==2,Y])
plot(df[A==1 & E == 1,Y])
plot(df[A==1 & E == 2,Y])
plot(df[A==0 & E == 1,Y])
plot(df[A==0 & E == 2,Y])
par(mfrow=c(2,2))
plot(df[A==1,Y])
plot(df[A==0,Y])
plot(df[E==1,Y])
plot(df[E==2,Y])
par(mfrow=c(2,2))
plot(df[A==1 & E == 1,Y])
plot(df[A==1 & E == 2,Y])
plot(df[A==0 & E == 1,Y])
plot(df[A==0 & E == 2,Y])
par(mfrow=c(2,2))
plot(df[A==1,Y])
plot(df[A==0,Y])
plot(df[E==1,Y])
plot(df[E==2,Y])
sum(df)
summarize(df)
summarise(df)
summarise
?summarise
?summarize
?sum
?summary
summary(df)
summary(df)
summary.lm(df)
# 2.1
?lm
# 2.1
mt = lm(Y ~ T, data= df)
mt
coefficients(mt)
coefficients(mt)
residuals(mt)
fitted.values(mt)
# 2.1
mT = lm(Y ~ T, data= df)
coefficients(mT)
residuals(mT)
fitted.values(mT)
# 2.1
mT = lm(Y ~ T, data= df)
mT
residuals(mT)
fitted.values(mT)
coef = coefficients(mT)
res = residuals(mT)
ft = fitted.values(mT)
plot(coef)
plot(res)
plot(ft)
plot(df$Y)
summary(mT)
coef
df
# 2.4
mC = lm(Y ~ C, data=df)
mP = lm(Y ~ P, data=df)
mC
mP = lm(Y ~ P, data=df)
mP
coefficients(mC)
summary(mC)
summary(mP)
# 2.5
mC2 = lm(Y ~ C**2, data=df)
# 2.5
mC2 = lm(Y ~ C**2, data=df)
mClog = lm(Y ~ log(C), data=df)
mP2 = lm(Y ~ P**2, data=df)
mPlog = lm(Y ~ log(P), data=df)
# 2.5
mC2 = lm(Y ~ C**2, data=df)
summary(mC2)
mClog = lm(Y ~ log(C), data=df)
summary(mClog)
mP2 = lm(Y ~ P**2, data=df)
summary(mP2)
mPlog = lm(Y ~ log(P), data=df)
summary(mPlog)
summary(mC)
summary(mC2)
summary(mC)
mc
mC
mC2
summary(mClog)
# 2.5
mC2 = lm(Y ~ C**2, data=df)
summary(mC2)
?lm
# The coefficients are significant at 0.001 confidence level.
df[,C2 := C**2]
df
# 2.5
mC2 = lm(Y ~ C2, data=df)
mc2
mC2
mc
mC
summary(mClog)
# 2.5
mC2 = lm(Y ~ C^2, data=df)
mC2
# 2.5
mC2 = lm(Y ~ C**2, data=df)
mC2
mC
# 2.5
mC2 = lm(Y ~ C2, data=df)
mC2
summary(mC2)
mClog = lm(Y ~ log(C), data=df)
summary(mClog)
summary(mC2)
summary(mC)
summary(mClog)
summary(mP2)
df[,P2 := P**2]
mP2 = lm(Y ~ P2, data=df)
summary(mP2)
mPlog = lm(Y ~ log(P), data=df)
summary(mPlog)
summary(mP2)
summary(mP)
summary(mPlog)
summary(mP2)
summary(mP2)
summary(mP2)
summary(mC)
# 2.6
lm(log(Y) ~ C, data=df)
# 2.6
mYlog = lm(log(Y) ~ C, data=df)
summary(mYlog)
summary(mYlog)
summary(mC)
# 2.7
mCPT= lm(Y ~ T + C + P,data=df)
summary(mCPT)
df$A
?lm
# 2.8
mCPTA= lm(Y ~ T + C + P + A,data=df)
mCPTA
# 2.8
mCPTA= lm(Y ~ T + C + P + A,data=df)
summary(mCPTA)
contrasts(mCPTA)
df$A
str(df)
summary(mCPTA)
# 2.9
mCPTA= lm(Y ~ T*A + C*A + P*A + A,data=df)
mCPTA
# 2.9
mCPTA= lm(Y ~ T*A + C*A + P*A,data=df)
mCPTA
# 2.9
mCPTA_interact= lm(Y ~ T*A + C*A + P*A,data=df)
# 2.8
mCPTA= lm(Y ~ T + C + P + A,data=df)
summary(mCPTA)
sumamry(mCPTA_interact)
summary(mCPTA_interact)
plot(mCPT)
# 3.1
par(mrow=c(2,2))
# 3.1
par(nrow=c(2,2))
# 3.1
par(mfrow=c(2,2))
# 2.7
mCPT= lm(Y ~ T + C + P,data=df)
summary(mCPT)
plot(mCPT$residuals ~ mCPT$fitted.values)
# 3.1
plot(mCPA)
# 3.1
plot(mCPT)
# 3.1
plot(mCPT)
# FIX: what does single figure mean
par(mfrow=c(2,2))
# 3.1
plot(mCPT)
df[-c(1,15)]
mCPT2 = lm(Y ~ T + C + P,data=df[-c(1,15)])
plot(mCPT2)
# 1.1
dt <- read.delim("C:/Users/kaany/OneDrive/Desktop/Practicals/MT3/cloud.seeding.txt")
# 1.5
library(data.table)
df = as.data.table(dt)
df$A = as.factor(df$A)
df$E = as.factor(df$E)
# 2.1
mT = lm(Y ~ T, data= df)
coef = coefficients(mT)
res = residuals(mT)
ft = fitted.values(mT)
# The coefficients are significant at 0.001 confidence level.
# df[,C2 := C**2]
# df[,P2 := P**2]
# 2.5
mC2 = lm(Y ~ I(C^2), data=df)
mC2
mClog = lm(Y ~ log(C), data=df)
mClog
# 2.6
mYlog = lm(log(Y) ~ C, data=df)
summary(mYlog)
plot(mYlog)
plot(mYlog)
# 2.6
par(mfrow=c(2,2))
mYlog = lm(log(Y) ~ C, data=df)
# 2.6
par(mfrow=c(2,2))
mYlog = lm(log(Y) ~ C, data=df)
plot(1,1)
summary(mYlog)
mYlog = lm(log(Y) ~ C, data=df)
# 2.6
par(mfrow=c(2,2))
plot(mYlog)
# 2.4
mC = lm(Y ~ C, data=df)
plot(mC)
plot(mYlog)
plot(mC)
mClog = lm(Y ~ log(C), data=df)
plot(mClog)
plot(mC)
plot(mClog)
plot(mC)
plot(mClog)
plot(mC)
plot(mClog)
plot(mC)
plot(mClog)
# 3.1
plot(mCPT)
# 2.9
mCPTA_interact= lm(Y ~ T*A + C*A + P*A,data=df)
summary(mCPTA_interact)
# 2.7
mCPT= lm(Y ~ T + C + P,data=df)
# 3.1
plot(mCPT)
# 1.1
dt <- read.delim("C:/Users/kaany/OneDrive/Desktop/Practicals/MT3/cloud.seeding.txt")
# 1.2
head(dt)
str(dt)
# 1.3
cor(dt)[,"Y"]
# P, E, SNe, and T seem to be related to our response variables
# 1.4
plot(dt)
# 1.5
library(data.table)
df = as.data.table(dt)
df$A = as.factor(df$A)
df$E = as.factor(df$E)
par(mfrow=c(2,2))
plot(df[A==1,Y])
plot(df[A==0,Y])
plot(df[E==1,Y])
plot(df[E==2,Y])
par(mfrow=c(2,2))
plot(df[A==1 & E == 1,Y])
plot(df[A==1 & E == 2,Y])
plot(df[A==0 & E == 1,Y])
plot(df[A==0 & E == 2,Y])
summary(df)
# 2.1
mT = lm(Y ~ T, data= df)
coef = coefficients(mT)
res = residuals(mT)
ft = fitted.values(mT)
summary(mT)
# 2.4
mC = lm(Y ~ C, data=df)
summary(mC)
mP = lm(Y ~ P, data=df)
summary(mP)
# The coefficients are significant at 0.001 confidence level.
# df[,C2 := C**2]
# df[,P2 := P**2]
# 2.5
mC2 = lm(Y ~ I(C^2), data=df)
summary(mC2)
mClog = lm(Y ~ log(C), data=df)
summary(mClog)
mP2 = lm(Y ~ I(P^2), data=df)
summary(mP2)
mPlog = lm(Y ~ log(P), data=df)
summary(mPlog)
# 2.6
par(mfrow=c(2,2))
mYlog = lm(log(Y) ~ C, data=df)
summary(mYlog)
